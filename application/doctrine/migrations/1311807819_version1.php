<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Version1 extends Doctrine_Migration_Base
{
    public function up()
    {
        $this->createTable('access', array(
             'id' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'session_id' => 
             array(
              'unique' => '1',
              'type' => 'string',
              'fixed' => '1',
              'length' => '32',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'user_agent' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'referrer' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'ip_address' => 
             array(
              'type' => 'string',
              'ip' => '1',
              'length' => '15',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'country_code' => 
             array(
              'type' => 'string',
              'country' => '1',
              'length' => '2',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'country_name' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'region_name' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'city' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'zip_postal_code' => 
             array(
              'type' => 'string',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'latitude' => 
             array(
              'scale' => '6',
              'type' => 'decimal',
              'length' => '15',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'longitude' => 
             array(
              'scale' => '6',
              'type' => 'decimal',
              'length' => '15',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'access_init' => 
              array(
              'fields' => 
              array(
               0 => 'ip_address',
               1 => 'user_agent',
               2 => 'session_id',
              ),
              'type' => 'unique',
              ),
              'access_country' => 
              array(
              'fields' => 
              array(
               0 => 'country_code',
              ),
              ),
              'access_state' => 
              array(
              'fields' => 
              array(
               0 => 'region_name',
              ),
              ),
              'access_city' => 
              array(
              'fields' => 
              array(
               0 => 'city',
              ),
              ),
              'access_ipaddress' => 
              array(
              'fields' => 
              array(
               0 => 'ip_address',
              ),
              ),
              'access_country_code' => 
              array(
              'fields' => 
              array(
               0 => 'country_code',
              ),
              ),
              'access_country_name' => 
              array(
              'fields' => 
              array(
               0 => 'country_name',
              ),
              ),
              'IX_Access_1' => 
              array(
              'fields' => 
              array(
               0 => 'city',
              ),
              ),
              'access_postal_code' => 
              array(
              'fields' => 
              array(
               0 => 'zip_postal_code',
              ),
              ),
              'access_referrer' => 
              array(
              'fields' => 
              array(
               0 => 'referrer',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('activity', array(
             'id' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'access_id' => 
             array(
              'type' => 'integer',
              'notnull' => '1',
              'length' => '10',
              'unsigned' => '1',
             ),
             'url_segment_1' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_2' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_3' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_4' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_5' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_6' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_7' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_8' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_9' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'url_segment_10' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'previuos_page' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'time_on_previuos_page' => 
             array(
              'scale' => '4',
              'type' => 'decimal',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'current_page' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
              'unsigned' => '1',
             ),
             'page_load_time' => 
             array(
              'scale' => '4',
              'type' => 'decimal',
              'notnull' => '1',
              'length' => '10',
              'unsigned' => '1',
             ),
             'memory_usage' => 
             array(
              'scale' => '4',
              'type' => 'decimal',
              'notnull' => '1',
              'length' => '10',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'activity_controller' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_1',
              ),
              ),
              'activity_method' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_2',
              ),
              ),
              'url_segment_1' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_1',
              ),
              ),
              'url_segment_2' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_2',
              ),
              ),
              'url_segment_3' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_3',
              ),
              ),
              'url_segment_4' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_4',
              ),
              ),
              'url_segment_5' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_5',
              ),
              ),
              'url_segment_6' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_6',
              ),
              ),
              'url_segment_7' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_7',
              ),
              ),
              'url_segment_8' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_8',
              ),
              ),
              'url_segment_9' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_9',
              ),
              ),
              'url_segment_10' => 
              array(
              'fields' => 
              array(
               0 => 'url_segment_10',
              ),
              ),
              'previous_page' => 
              array(
              'fields' => 
              array(
               0 => 'previuos_page',
              ),
              ),
              'current_page' => 
              array(
              'fields' => 
              array(
               0 => 'current_page',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('apikey', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'website' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'apikey' => 
             array(
              'type' => 'string',
              'fixed' => '1',
              'length' => '36',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'status' => 
             array(
              'default' => 'created',
              'type' => 'enum',
              'values' => 
              array(
              0 => 'created',
              1 => 'active',
              2 => 'revoked',
              3 => 'disabled',
              ),
              'length' => '4',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'issued' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'apikey_index' => 
              array(
              'fields' => 
              array(
               0 => 'apikey',
              ),
              'type' => 'unique',
              ),
              'website_index' => 
              array(
              'fields' => 
              array(
               0 => 'website',
              ),
              'type' => 'unique',
              ),
              'user_id_index' => 
              array(
              'fields' => 
              array(
               0 => 'user_id',
              ),
              'type' => 'unique',
              ),
              'status_index' => 
              array(
              'fields' => 
              array(
               0 => 'status',
              ),
              ),
              'issued_index' => 
              array(
              'fields' => 
              array(
               0 => 'issued',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('autologin', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'key_id' => 
             array(
              'unique' => '1',
              'unsigned' => '1',
              'type' => 'string',
              'fixed' => '1',
              'length' => '32',
              'notnull' => '',
             ),
             'user_agent' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '150',
              'unsigned' => '1',
             ),
             'last_ip' => 
             array(
              'type' => 'string',
              'length' => '40',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'last_login' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'user_id_index' => 
              array(
              'fields' => 
              array(
               0 => 'user_id',
              ),
              ),
              'user_agent_index' => 
              array(
              'fields' => 
              array(
               0 => 'user_agent',
              ),
              ),
              'last_ip_index' => 
              array(
              'fields' => 
              array(
               0 => 'last_ip',
              ),
              ),
              'last_login_index' => 
              array(
              'fields' => 
              array(
               0 => 'last_login',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('login_attempt', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'fixed' => '0',
              'length' => '10',
              'notnull' => '',
             ),
             'ip_address' => 
             array(
              'type' => 'string',
              'ip' => '1',
              'length' => '40',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'login' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'time' => 
             array(
              'type' => 'time',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'ip_address_index' => 
              array(
              'fields' => 
              array(
               0 => 'ip_address',
              ),
              ),
              'login_index' => 
              array(
              'fields' => 
              array(
               0 => 'login',
              ),
              ),
              'time_index' => 
              array(
              'fields' => 
              array(
               0 => 'time',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('maintenance', array(
             'mode' => 
             array(
              'primary' => '1',
              'type' => 'enum',
              'values' => 
              array(
              0 => 'enabled',
              1 => 'disabled',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'message' => 
             array(
              'type' => 'blob',
              'notnull' => '1',
              'length' => '',
              'unsigned' => '1',
             ),
             'start_datetime' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'end_datetime' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'recurring' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'yes',
              1 => 'no',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'mm_data' => 
              array(
              'fields' => 
              array(
               0 => 'recurring',
               1 => 'start_datetime',
               2 => 'end_datetime',
              ),
              'type' => 'unique',
              ),
             ),
             'primary' => 
             array(
              0 => 'mode',
             ),
             ));
        $this->createTable('profile_phone', array(
             'id' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'number' => 
             array(
              'type' => 'string',
              'length' => '15',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'type' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'work',
              1 => 'home',
              2 => 'cell',
              3 => 'fax',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'profile_id' => 
             array(
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('profile', array(
             'id' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'avatar' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'gender' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'male',
              1 => 'female',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'description' => 
             array(
              'type' => 'blob',
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'gender' => 
              array(
              'fields' => 
              array(
               0 => 'gender',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('session', array(
             'session_id' => 
             array(
              'primary' => '1',
              'unique' => '1',
              'type' => 'string',
              'fixed' => '1',
              'length' => '32',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'ip_address' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'ip' => '1',
              'length' => '16',
              'unsigned' => '1',
             ),
             'user_agent' => 
             array(
              'type' => 'string',
              'notnull' => '1',
              'length' => '255',
              'unsigned' => '1',
             ),
             'last_activity' => 
             array(
              'unsigned' => '1',
              'type' => 'integer',
              'notnull' => '1',
              'length' => '8',
             ),
             'user_data' => 
             array(
              'type' => 'blob',
              'notnull' => '1',
              'length' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'session_id_index' => 
              array(
              'fields' => 
              array(
               0 => 'session_id',
              ),
              ),
              'ip_address_index' => 
              array(
              'fields' => 
              array(
               0 => 'ip_address',
              ),
              ),
              'user_agent_index' => 
              array(
              'fields' => 
              array(
               0 => 'user_agent',
              ),
              ),
              'last_activity_index' => 
              array(
              'fields' => 
              array(
               0 => 'last_activity',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'session_id',
             ),
             ));
        $this->createTable('tag', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
             ),
             'name' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'lc_name' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'name_index' => 
              array(
              'fields' => 
              array(
               0 => 'name',
              ),
              'type' => 'unique',
              ),
              'lc_name_index' => 
              array(
              'fields' => 
              array(
               0 => 'lc_name',
              ),
              'type' => 'unique',
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('user', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
             ),
             'role' => 
             array(
              'default' => 'client',
              'type' => 'enum',
              'notnull' => '1',
              'values' => 
              array(
              0 => 'super_admin',
              1 => 'admin',
              2 => 'employee',
              3 => 'contractor',
              4 => 'client',
              ),
              'length' => '10',
              'unsigned' => '1',
             ),
             'username' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'password' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'email' => 
             array(
              'type' => 'string',
              'email' => '1',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'display_name' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'activated' => 
             array(
              'type' => 'boolean',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'banned' => 
             array(
              'type' => 'boolean',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'ban_reason' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_password_key' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_password_requested' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_email' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_email_key' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'indexes' => 
             array(
              'username_index' => 
              array(
              'fields' => 
              array(
               0 => 'username',
              ),
              'type' => 'unique',
              ),
              'email_index' => 
              array(
              'fields' => 
              array(
               0 => 'email',
              ),
              'type' => 'unique',
              ),
              'activated_index' => 
              array(
              'fields' => 
              array(
               0 => 'activated',
              ),
              ),
              'banned_index' => 
              array(
              'fields' => 
              array(
               0 => 'banned',
              ),
              ),
             ),
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('user_profile', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'autoincrement' => '1',
              'length' => '10',
              'notnull' => '',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'country' => 
             array(
              'type' => 'string',
              'length' => '20',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'website' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'created_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             'updated_at' => 
             array(
              'notnull' => '1',
              'type' => 'timestamp',
              'length' => '25',
              'unsigned' => '1',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
             ),
             ));
        $this->createTable('maintenance_version', array(
             'mode' => 
             array(
              'primary' => '1',
              'type' => 'enum',
              'values' => 
              array(
              0 => 'enabled',
              1 => 'disabled',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'message' => 
             array(
              'type' => 'blob',
              'notnull' => '1',
              'length' => '',
              'unsigned' => '1',
             ),
             'start_datetime' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'end_datetime' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'recurring' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'yes',
              1 => 'no',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'mode',
              1 => 'version',
             ),
             ));
        $this->createTable('phone_version', array(
             'id' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'number' => 
             array(
              'type' => 'string',
              'length' => '15',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'type' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'work',
              1 => 'home',
              2 => 'cell',
              3 => 'fax',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'profile_id' => 
             array(
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
              1 => 'version',
             ),
             ));
        $this->createTable('profile_version', array(
             'id' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'avatar' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'gender' => 
             array(
              'type' => 'enum',
              'values' => 
              array(
              0 => 'male',
              1 => 'female',
              ),
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'description' => 
             array(
              'type' => 'blob',
              'length' => '',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
              1 => 'version',
             ),
             ));
        $this->createTable('user_version', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
             ),
             'role' => 
             array(
              'default' => 'client',
              'type' => 'enum',
              'notnull' => '1',
              'values' => 
              array(
              0 => 'super_admin',
              1 => 'admin',
              2 => 'employee',
              3 => 'contractor',
              4 => 'client',
              ),
              'length' => '10',
              'unsigned' => '1',
             ),
             'username' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'password' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'email' => 
             array(
              'type' => 'string',
              'email' => '1',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'display_name' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'activated' => 
             array(
              'type' => 'boolean',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'banned' => 
             array(
              'type' => 'boolean',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'ban_reason' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_password_key' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_password_requested' => 
             array(
              'type' => 'timestamp',
              'length' => '25',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_email' => 
             array(
              'type' => 'string',
              'length' => '100',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'new_email_key' => 
             array(
              'type' => 'string',
              'length' => '50',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
              1 => 'version',
             ),
             ));
        $this->createTable('user_profile_version', array(
             'id' => 
             array(
              'primary' => '1',
              'unsigned' => '1',
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
             ),
             'user_id' => 
             array(
              'type' => 'integer',
              'length' => '10',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'country' => 
             array(
              'type' => 'string',
              'length' => '20',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'website' => 
             array(
              'type' => 'string',
              'length' => '255',
              'notnull' => '',
              'unsigned' => '1',
             ),
             'version' => 
             array(
              'primary' => '1',
              'type' => 'integer',
              'length' => '8',
              'notnull' => '',
              'unsigned' => '1',
             ),
             ), array(
             'primary' => 
             array(
              0 => 'id',
              1 => 'version',
             ),
             ));
        $this->createForeignKey('access', 'access_user_id_user_id', array(
             'name' => 'access_user_id_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'user',
             ));
        $this->createForeignKey('activity', 'activity_access_id_access_id', array(
             'name' => 'activity_access_id_access_id',
             'local' => 'access_id',
             'foreign' => 'id',
             'foreignTable' => 'access',
             ));
        $this->createForeignKey('apikey', 'apikey_user_id_user_id', array(
             'name' => 'apikey_user_id_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'user',
             ));
        $this->createForeignKey('autologin', 'autologin_user_id_user_id', array(
             'name' => 'autologin_user_id_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'user',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('profile_phone', 'profile_phone_profile_id_profile_id', array(
             'name' => 'profile_phone_profile_id_profile_id',
             'local' => 'profile_id',
             'foreign' => 'id',
             'foreignTable' => 'profile',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('user_profile', 'user_profile_user_id_user_id', array(
             'name' => 'user_profile_user_id_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'user',
             'onUpdate' => '',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('maintenance_version', 'maintenance_version_mode_maintenance_mode', array(
             'name' => 'maintenance_version_mode_maintenance_mode',
             'local' => 'mode',
             'foreign' => 'mode',
             'foreignTable' => 'maintenance',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('phone_version', 'phone_version_id_profile_phone_id', array(
             'name' => 'phone_version_id_profile_phone_id',
             'local' => 'id',
             'foreign' => 'id',
             'foreignTable' => 'profile_phone',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('profile_version', 'profile_version_id_profile_id', array(
             'name' => 'profile_version_id_profile_id',
             'local' => 'id',
             'foreign' => 'id',
             'foreignTable' => 'profile',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('user_version', 'user_version_id_user_id', array(
             'name' => 'user_version_id_user_id',
             'local' => 'id',
             'foreign' => 'id',
             'foreignTable' => 'user',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('user_profile_version', 'user_profile_version_id_user_profile_id', array(
             'name' => 'user_profile_version_id_user_profile_id',
             'local' => 'id',
             'foreign' => 'id',
             'foreignTable' => 'user_profile',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->addIndex('access', 'access_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->addIndex('activity', 'activity_access_id', array(
             'fields' => 
             array(
              0 => 'access_id',
             ),
             ));
        $this->addIndex('apikey', 'apikey_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->addIndex('autologin', 'autologin_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->addIndex('profile_phone', 'profile_phone_profile_id', array(
             'fields' => 
             array(
              0 => 'profile_id',
             ),
             ));
        $this->addIndex('user_profile', 'user_profile_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->addIndex('maintenance_version', 'maintenance_version_mode', array(
             'fields' => 
             array(
              0 => 'mode',
             ),
             ));
        $this->addIndex('phone_version', 'phone_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->addIndex('profile_version', 'profile_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->addIndex('user_version', 'user_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->addIndex('user_profile_version', 'user_profile_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
    }

    public function down()
    {
        $this->dropTable('access');
        $this->dropTable('activity');
        $this->dropTable('apikey');
        $this->dropTable('autologin');
        $this->dropTable('login_attempt');
        $this->dropTable('maintenance');
        $this->dropTable('profile_phone');
        $this->dropTable('profile');
        $this->dropTable('session');
        $this->dropTable('tag');
        $this->dropTable('user');
        $this->dropTable('user_profile');
        $this->dropTable('maintenance_version');
        $this->dropTable('phone_version');
        $this->dropTable('profile_version');
        $this->dropTable('user_version');
        $this->dropTable('user_profile_version');
        $this->dropForeignKey('access', 'access_user_id_user_id');
        $this->dropForeignKey('activity', 'activity_access_id_access_id');
        $this->dropForeignKey('apikey', 'apikey_user_id_user_id');
        $this->dropForeignKey('autologin', 'autologin_user_id_user_id');
        $this->dropForeignKey('profile_phone', 'profile_phone_profile_id_profile_id');
        $this->dropForeignKey('user_profile', 'user_profile_user_id_user_id');
        $this->dropForeignKey('maintenance_version', 'maintenance_version_mode_maintenance_mode');
        $this->dropForeignKey('phone_version', 'phone_version_id_profile_phone_id');
        $this->dropForeignKey('profile_version', 'profile_version_id_profile_id');
        $this->dropForeignKey('user_version', 'user_version_id_user_id');
        $this->dropForeignKey('user_profile_version', 'user_profile_version_id_user_profile_id');
        $this->removeIndex('access', 'access_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->removeIndex('activity', 'activity_access_id', array(
             'fields' => 
             array(
              0 => 'access_id',
             ),
             ));
        $this->removeIndex('apikey', 'apikey_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->removeIndex('autologin', 'autologin_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->removeIndex('profile_phone', 'profile_phone_profile_id', array(
             'fields' => 
             array(
              0 => 'profile_id',
             ),
             ));
        $this->removeIndex('user_profile', 'user_profile_user_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->removeIndex('maintenance_version', 'maintenance_version_mode', array(
             'fields' => 
             array(
              0 => 'mode',
             ),
             ));
        $this->removeIndex('phone_version', 'phone_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->removeIndex('profile_version', 'profile_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->removeIndex('user_version', 'user_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
        $this->removeIndex('user_profile_version', 'user_profile_version_id', array(
             'fields' => 
             array(
              0 => 'id',
             ),
             ));
    }
}