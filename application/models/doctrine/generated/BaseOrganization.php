<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Organization', 'default');

/**
 * BaseOrganization
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $owner_id
 * @property boolean $is_my_oragnization
 * @property string $state_incorporated
 * @property integer $year_incorporated
 * @property string $sic_code
 * @property string $naics_code
 * @property string $duns
 * @property string $tax_id
 * @property enum $tax_id_type
 * @property enum $type
 * @property enum $status
 * @property boolean $require_1099
 * @property string $image_company_logo
 * @property string $image_avatar_public
 * @property string $image_avatar_private
 * @property integer $ContactAddressBook_id
 * @property User $User
 * @property ContactAddressBook $ContactAddressBook
 * @property Doctrine_Collection $OrganizationStaff
 * @property Doctrine_Collection $OrganizationRelationship
 * @property Doctrine_Collection $Team
 * @property Doctrine_Collection $TeamRole
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrganization extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('organization');
        $this->hasColumn('id', 'integer', 10, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '10',
             ));
        $this->hasColumn('owner_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
        $this->hasColumn('is_my_oragnization', 'boolean', 1, array(
             'default' => 0,
             'type' => 'boolean',
             'length' => '1',
             ));
        $this->hasColumn('state_incorporated', 'string', 2, array(
             'type' => 'string',
             'length' => '2',
             ));
        $this->hasColumn('year_incorporated', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('sic_code', 'string', 6, array(
             'type' => 'string',
             'length' => '6',
             ));
        $this->hasColumn('naics_code', 'string', 8, array(
             'type' => 'string',
             'length' => '8',
             ));
        $this->hasColumn('duns', 'string', 9, array(
             'type' => 'string',
             'length' => '9',
             ));
        $this->hasColumn('tax_id', 'string', 9, array(
             'type' => 'string',
             'length' => '9',
             ));
        $this->hasColumn('tax_id_type', 'enum', null, array(
             'default' => 'ein',
             'type' => 'enum',
             'values' => 
             array(
              0 => 'ein',
              1 => 'ssn',
             ),
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'agent',
              1 => 'company',
              2 => 'buyer',
             ),
             ));
        $this->hasColumn('status', 'enum', null, array(
             'default' => 'pending',
             'type' => 'enum',
             'values' => 
             array(
              0 => 'pending',
              1 => 'active',
              2 => 'disabled',
             ),
             ));
        $this->hasColumn('require_1099', 'boolean', 1, array(
             'default' => 0,
             'type' => 'boolean',
             'notnull' => true,
             'length' => '1',
             ));
        $this->hasColumn('image_company_logo', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('image_avatar_public', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('image_avatar_private', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('ContactAddressBook_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));


        $this->index('IX_Organization_1', array(
             'fields' => 
             array(
              0 => 'owner_id',
              1 => 'type',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'owner_id',
             'foreign' => 'id'));

        $this->hasOne('ContactAddressBook', array(
             'local' => 'ContactAddressBook_id',
             'foreign' => 'id'));

        $this->hasMany('OrganizationStaff', array(
             'local' => 'id',
             'foreign' => 'Organization_id'));

        $this->hasMany('OrganizationRelationship', array(
             'local' => 'id',
             'foreign' => 'Organization_relative_id'));

        $this->hasMany('Team', array(
             'local' => 'id',
             'foreign' => 'Organization_id'));

        $this->hasMany('TeamRole', array(
             'local' => 'id',
             'foreign' => 'Organization_id'));

        $versionable0 = new Doctrine_Template_Versionable();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $taggable0 = new Taggable();
        $trackauthor0 = new TrackAuthor();
        $this->actAs($versionable0);
        $this->actAs($timestampable0);
        $this->actAs($taggable0);
        $this->actAs($trackauthor0);
    }
}