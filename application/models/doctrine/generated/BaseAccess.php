<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Access', 'default');

/**
 * BaseAccess
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $session_id
 * @property string $user_agent
 * @property string $referrer
 * @property string $ip_address
 * @property string $country_code
 * @property string $country_name
 * @property string $region_name
 * @property string $city
 * @property string $zip_postal_code
 * @property decimal $latitude
 * @property decimal $longitude
 * @property User $User
 * @property Doctrine_Collection $Activity
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAccess extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('access');
        $this->hasColumn('id', 'integer', 10, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '10',
             ));
        $this->hasColumn('user_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
        $this->hasColumn('session_id', 'string', 32, array(
             'unique' => true,
             'type' => 'string',
             'fixed' => 1,
             'length' => '32',
             ));
        $this->hasColumn('user_agent', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('referrer', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('ip_address', 'string', 15, array(
             'type' => 'string',
             'ip' => true,
             'length' => '15',
             ));
        $this->hasColumn('country_code', 'string', 2, array(
             'type' => 'string',
             'country' => true,
             'length' => '2',
             ));
        $this->hasColumn('country_name', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('region_name', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('zip_postal_code', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('latitude', 'decimal', 15, array(
             'scale' => 6,
             'type' => 'decimal',
             'length' => '15',
             ));
        $this->hasColumn('longitude', 'decimal', 15, array(
             'scale' => 6,
             'type' => 'decimal',
             'length' => '15',
             ));


        $this->index('access_init', array(
             'fields' => 
             array(
              0 => 'ip_address',
              1 => 'user_agent',
              2 => 'session_id',
             ),
             'type' => 'unique',
             ));
        $this->index('access_country', array(
             'fields' => 
             array(
              0 => 'country_code',
             ),
             ));
        $this->index('access_state', array(
             'fields' => 
             array(
              0 => 'region_name',
             ),
             ));
        $this->index('access_city', array(
             'fields' => 
             array(
              0 => 'city',
             ),
             ));
        $this->index('access_ipaddress', array(
             'fields' => 
             array(
              0 => 'ip_address',
             ),
             ));
        $this->index('access_country_code', array(
             'fields' => 
             array(
              0 => 'country_code',
             ),
             ));
        $this->index('access_country_name', array(
             'fields' => 
             array(
              0 => 'country_name',
             ),
             ));
        $this->index('IX_Access_1', array(
             'fields' => 
             array(
              0 => 'city',
             ),
             ));
        $this->index('access_postal_code', array(
             'fields' => 
             array(
              0 => 'zip_postal_code',
             ),
             ));
        $this->index('access_referrer', array(
             'fields' => 
             array(
              0 => 'referrer',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('Activity', array(
             'local' => 'id',
             'foreign' => 'access_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}