<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('JanrainEngage', 'default');

/**
 * BaseJanrainEngage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $identifier
 * @property string $provider_name
 * @property string $display_name
 * @property string $preferred_username
 * @property string $name
 * @property string $gender
 * @property date $birthday
 * @property string $utc_offest
 * @property string $email
 * @property string $verfied_email
 * @property string $url
 * @property string $phone_number
 * @property string $photo
 * @property integer $User_id
 * @property User $User
 * @property Doctrine_Collection $JanrainEngageName
 * @property Doctrine_Collection $JanrainEngageAddress
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJanrainEngage extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('janrain_engage');
        $this->hasColumn('id', 'integer', 10, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '10',
             ));
        $this->hasColumn('identifier', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('provider_name', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('display_name', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('preferred_username', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('gender', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('birthday', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('utc_offest', 'string', 25, array(
             'type' => 'string',
             'length' => '25',
             ));
        $this->hasColumn('email', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('verfied_email', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('url', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('phone_number', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('User_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'User_id',
             'foreign' => 'id'));

        $this->hasMany('JanrainEngageName', array(
             'local' => 'id',
             'foreign' => 'Engage_id'));

        $this->hasMany('JanrainEngageAddress', array(
             'local' => 'id',
             'foreign' => 'Engage_id'));

        $versionable0 = new Doctrine_Template_Versionable();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $searchable0 = new Doctrine_Template_Searchable(array(
             'fields' => 
             array(
              0 => 'identifier',
             ),
             ));
        $trackauthor0 = new TrackAuthor();
        $this->actAs($versionable0);
        $this->actAs($timestampable0);
        $this->actAs($searchable0);
        $this->actAs($trackauthor0);
    }
}