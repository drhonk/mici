<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TeamMember', 'default');

/**
 * BaseTeamMember
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $OrganizationStaff_id
 * @property integer $Team_id
 * @property integer $TeamRole_id
 * @property OrganizationStaff $OrganizationStaff
 * @property Team $Team
 * @property TeamRole $TeamRole
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTeamMember extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('organization_team_member');
        $this->hasColumn('id', 'integer', 10, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '10',
             ));
        $this->hasColumn('OrganizationStaff_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
        $this->hasColumn('Team_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
        $this->hasColumn('TeamRole_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => '10',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OrganizationStaff', array(
             'local' => 'OrganizationStaff_id',
             'foreign' => 'id'));

        $this->hasOne('Team', array(
             'local' => 'Team_id',
             'foreign' => 'id'));

        $this->hasOne('TeamRole', array(
             'local' => 'TeamRole_id',
             'foreign' => 'id'));

        $versionable0 = new Doctrine_Template_Versionable();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $taggable0 = new Taggable();
        $trackauthor0 = new TrackAuthor();
        $this->actAs($versionable0);
        $this->actAs($timestampable0);
        $this->actAs($taggable0);
        $this->actAs($trackauthor0);
    }
}